{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@satyam-seth/otp-field/dist/js/components/field.js","bundle.js","node_modules/@satyam-seth/otp-field/dist/js/components/types.js","node_modules/@satyam-seth/otp-field/dist/js/main.js","node_modules/@satyam-seth/otp-field/dist/js/utils/regex.js","node_modules/@satyam-seth/otp-field/dist/js/utils/types.js","src/ts/driver.ts","src/ts/form/config.ts","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","OTPField","regex_1","types_1","constructor","config","this","fieldValue","disabled","boxCount","skeleton","field","document","createElement","id","className","appendChild","getBoxElement","index","box","getBoxId","type","maxLength","autocomplete","setAttribute","toString","addEventListener","onBoxInput","bind","onBoxKeyDown","onBoxFocus","onBoxPaste","isDisabled","namespace","element","elem","getElementById","focus","focusBoxIndex","getBoxValue","focusBox","disable","getBoxAtIndex","clear","setBoxValue","destroy","remove","build","parentElement","getOtpRegex","_a","customRegex","getOTPRegexForValueType","valueType","OTPValueType","NUMERIC","applyRegex","replace","boxId","getBoxIndex","dataIndex","getAttribute","parseInt","updateValue","concatenatedValue","focusNextBox","currentBox","currentBoxIndex","focusPrevBox","preventDefault","pastedText","clipboardData","getData","pastedValue","target","Math","min","onPasteBlur","undefined","blur","selectionStart","selectionEnd","key","updatedValue","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","prototype","hasOwnProperty","ALPHABETIC","ALPHABETIC_LOWER","ALPHABETIC_UPPER","ALPHANUMERIC","ALPHANUMERIC_LOWER","ALPHANUMERIC_UPPER","_createClass","defineProperties","props","descriptor","Constructor","protoProps","staticProps","__importDefault","mod","default","otp_field_1","config_1","Driver","instance","TypeError","_classCallCheck","initializeConfigForm","button","innerText","onClick","configForm","onSubmit","onConfigFormSubmit","onReset","onConfigFormReset","otpFieldConfig","otpField","otpFieldWrapper","querySelector","querySelectorAll","forEach","btn","setConfigOutputTextAreaValue","setButtonsDisableState","destroyOtpField","JSON","stringify","buildOtpField","navigator","clipboard","writeText","_b","status","btnStatusText","container","configOutputContainer","otpFieldContainer","configOutputTextArea","copyOtpFieldConfigButton","getButton","copyOtpFieldConfigToClipboard","textarea","rows","readOnly","buttonsWrapper","buttonWrapper","copyOtpFieldIdButton","copyOtpFieldValueButton","clearOtpFieldValueButton","focusOtpFieldButton","toggleDisableOtpFieldButton","copyOtpFieldIdToClipboard","copyOtpFieldValueToClipboard","clearOtpFieldValue","focusOTPField","toggleDisableOtpFieldClickHandler","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","_defineProperty","obj","ConfigForm","label","text","for","input","name","inputType","required","placeholder","extraAttributes","entries","_ref","_ref2","v","option","groupElement","inline","classList","add","labelElement","inputElement","buttonType","toggleFieldDisableState","checked","formData","FormData","Number","Boolean","passCustomRegex","String","RegExp","form","boxCountFormGroup","onPasteBlurFormGroup","passCustomRegexFormGroup","customRegexFormGroup","valueTypeFormGroup","formButtonGroup","getLabelElement","getInputElement","onPassCustomRegexChange","_ref3","_this","select","valueTypeOptions","_ref4","_ref5","getOptionElement","getFormGroup","boxCountLabel","boxCountInput","onPasteBlurLabel","onPasteBlurInput","passCustomRegexLabel","passCustomRegexInput","customRegexLabel","customRegexInput","valueTypeLabel","valueTypeSelect","getButtonElement","resetButton","submitButton","driver_1","window","onload","exampleSection"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OTPField = void 0;\nconst regex_1 = require(\"../utils/regex\");\nconst types_1 = require(\"../utils/types\");\nclass OTPField {\n    constructor(config) {\n        this.fieldValue = '';\n        this.disabled = false;\n        if (config.boxCount <= 0) {\n            throw new Error('Invalid config box count must be grater than zero.');\n        }\n        this.config = config;\n    }\n    skeleton() {\n        const field = document.createElement('div');\n        field.id = this.id;\n        field.className = 'otp-field';\n        for (let i = 0; i < this.config.boxCount; i++) {\n            field.appendChild(this.getBoxElement(i));\n        }\n        return field;\n    }\n    getBoxElement(index) {\n        const box = document.createElement('input');\n        box.id = this.getBoxId(index);\n        box.className = 'otp-box';\n        box.type = 'text';\n        box.maxLength = 1;\n        box.autocomplete = 'off';\n        box.setAttribute('data-index', index.toString());\n        box.addEventListener('input', this.onBoxInput.bind(this));\n        box.addEventListener('keydown', this.onBoxKeyDown.bind(this));\n        box.addEventListener('focus', this.onBoxFocus.bind(this));\n        box.addEventListener('paste', this.onBoxPaste.bind(this));\n        return box;\n    }\n    get value() {\n        return this.fieldValue;\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get id() {\n        return `otp-field-${this.config.namespace}`;\n    }\n    get element() {\n        const elem = document.getElementById(this.id);\n        if (elem === null) {\n            throw new Error(`Element with ID ${this.id} not found in the DOM.`);\n        }\n        return elem;\n    }\n    focus() {\n        let focusBoxIndex = this.config.boxCount - 1;\n        for (let i = 0; i < this.config.boxCount; i++) {\n            if (this.getBoxValue(i) === '') {\n                focusBoxIndex = i;\n                break;\n            }\n        }\n        this.focusBox(focusBoxIndex);\n    }\n    disable(disabled) {\n        for (let i = 0; i < this.config.boxCount; i++) {\n            const box = this.getBoxAtIndex(i);\n            box.disabled = disabled;\n        }\n        this.disabled = disabled;\n    }\n    clear() {\n        for (let i = 0; i < this.config.boxCount; i++) {\n            this.setBoxValue(i, '');\n        }\n        this.fieldValue = '';\n        this.focusBox(0);\n    }\n    destroy() {\n        this.element.remove();\n    }\n    build(parentElement) {\n        parentElement.appendChild(this.skeleton());\n    }\n    getOtpRegex() {\n        var _a;\n        if (this.config.customRegex) {\n            return this.config.customRegex;\n        }\n        return (0, regex_1.getOTPRegexForValueType)((_a = this.config.valueType) !== null && _a !== void 0 ? _a : types_1.OTPValueType.NUMERIC);\n    }\n    applyRegex(value) {\n        return value.replace(this.getOtpRegex(), '');\n    }\n    getBoxId(index) {\n        return `${this.config.namespace}-box-${index}`;\n    }\n    getBoxAtIndex(index) {\n        const boxId = this.getBoxId(index);\n        const box = document.getElementById(boxId);\n        if (box === null) {\n            throw new Error(`Unable to get box at index ${index}`);\n        }\n        return box;\n    }\n    getBoxIndex(box) {\n        const dataIndex = box.getAttribute('data-index');\n        if (dataIndex) {\n            return parseInt(dataIndex, 10);\n        }\n        throw new Error('Unable to get `data-index` attribute for box');\n    }\n    updateValue() {\n        let concatenatedValue = '';\n        for (let i = 0; i < this.config.boxCount; i++) {\n            concatenatedValue += this.getBoxValue(i);\n        }\n        this.fieldValue = concatenatedValue;\n    }\n    focusBox(index) {\n        const box = this.getBoxAtIndex(index);\n        box.focus();\n    }\n    focusNextBox(currentBox) {\n        const currentBoxIndex = this.getBoxIndex(currentBox);\n        if (currentBoxIndex + 1 < this.config.boxCount) {\n            this.focusBox(currentBoxIndex + 1);\n        }\n    }\n    focusPrevBox(currentBox) {\n        const currentBoxIndex = this.getBoxIndex(currentBox);\n        if (currentBoxIndex - 1 >= 0) {\n            this.focusBox(currentBoxIndex - 1);\n        }\n    }\n    setBoxValue(index, value) {\n        const box = this.getBoxAtIndex(index);\n        box.value = value;\n    }\n    getBoxValue(index) {\n        const box = this.getBoxAtIndex(index);\n        return box.value;\n    }\n    onBoxPaste(e) {\n        e.preventDefault();\n        const pastedText = e.clipboardData.getData('text');\n        const pastedValue = this.applyRegex(pastedText);\n        const currentBoxIndex = this.getBoxIndex(e.target);\n        const maxLength = Math.min(this.config.boxCount - currentBoxIndex, pastedValue.length);\n        for (let i = 0; i < maxLength; i++) {\n            this.setBoxValue(currentBoxIndex + i, pastedValue[i]);\n        }\n        if (this.config.onPasteBlur === true ||\n            this.config.onPasteBlur === undefined) {\n            e.target.blur();\n        }\n        else {\n            this.focusBox(currentBoxIndex + maxLength - 1);\n        }\n        this.updateValue();\n    }\n    onBoxFocus(e) {\n        if (e.target.value.length === 1) {\n            e.target.selectionStart = 0;\n            e.target.selectionEnd = 1;\n        }\n    }\n    onBoxKeyDown(e) {\n        if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n            e.preventDefault();\n            this.focusPrevBox(e.target);\n        }\n        if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n            e.preventDefault();\n            this.focusNextBox(e.target);\n        }\n        if (e.key === 'Backspace' &&\n            (e.target.value === '' ||\n                e.target.selectionEnd === 0)) {\n            this.focusPrevBox(e.target);\n        }\n        if (e.key === 'Delete' &&\n            (e.target.value === '' ||\n                (e.target.selectionStart !== 0 &&\n                    e.target.selectionEnd === 1))) {\n            this.focusNextBox(e.target);\n        }\n        if (e.code === 'KeyZ' || e.code === 'KeyY') {\n            e.preventDefault();\n        }\n    }\n    onBoxInput(e) {\n        const updatedValue = this.applyRegex(e.target.value);\n        e.target.value = updatedValue;\n        if (e.target.value !== '') {\n            this.focusNextBox(e.target);\n        }\n        this.updateValue();\n    }\n}\nexports.OTPField = OTPField;\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./components/field\"), exports);\n__exportStar(require(\"./components/types\"), exports);\n__exportStar(require(\"./utils/regex\"), exports);\n__exportStar(require(\"./utils/types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOTPRegexForValueType = getOTPRegexForValueType;\nconst types_1 = require(\"./types\");\nfunction getOTPRegexForValueType(valueType) {\n    switch (valueType) {\n        case types_1.OTPValueType.NUMERIC:\n            return /[^0-9]/g;\n        case types_1.OTPValueType.ALPHABETIC:\n            return /[^A-Za-z]/g;\n        case types_1.OTPValueType.ALPHABETIC_LOWER:\n            return /[^a-z]/g;\n        case types_1.OTPValueType.ALPHABETIC_UPPER:\n            return /[^A-Z]/g;\n        case types_1.OTPValueType.ALPHANUMERIC:\n            return /[^A-Za-z0-9]/g;\n        case types_1.OTPValueType.ALPHANUMERIC_LOWER:\n            return /[^a-z0-9]/g;\n        case types_1.OTPValueType.ALPHANUMERIC_UPPER:\n            return /[^A-Za-z0-9]/g;\n        default:\n            throw new Error('Invalid OTP field value type');\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OTPValueType = void 0;\nvar OTPValueType;\n(function (OTPValueType) {\n    OTPValueType[OTPValueType[\"NUMERIC\"] = 0] = \"NUMERIC\";\n    OTPValueType[OTPValueType[\"ALPHABETIC\"] = 1] = \"ALPHABETIC\";\n    OTPValueType[OTPValueType[\"ALPHABETIC_LOWER\"] = 2] = \"ALPHABETIC_LOWER\";\n    OTPValueType[OTPValueType[\"ALPHABETIC_UPPER\"] = 3] = \"ALPHABETIC_UPPER\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC\"] = 4] = \"ALPHANUMERIC\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC_LOWER\"] = 5] = \"ALPHANUMERIC_LOWER\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC_UPPER\"] = 6] = \"ALPHANUMERIC_UPPER\";\n})(OTPValueType || (exports.OTPValueType = OTPValueType = {}));\n","import { OTPField, OTPFieldConfig } from '@satyam-seth/otp-field';\nimport ConfigForm from './form/config';\n\nexport default class Driver {\n  namespace: string;\n\n  otpField?: OTPField;\n\n  configForm?: ConfigForm;\n\n  otpFieldConfig?: OTPFieldConfig;\n\n  constructor(namespace: string) {\n    this.namespace = namespace;\n    this.initializeConfigForm();\n  }\n\n  getButton(config: {\n    namespace: string;\n    innerText: string;\n    disabled: boolean;\n    // eslint-disable-next-line no-unused-vars\n    onClick: (e: any) => void;\n  }) {\n    const button = document.createElement('button');\n    button.id = `${config.namespace}-btn`;\n    button.disabled = config.disabled;\n    button.innerText = config.innerText;\n\n    // add click event listener\n    button.addEventListener('click', config.onClick.bind(this));\n\n    return button;\n  }\n\n  initializeConfigForm() {\n    this.configForm = new ConfigForm({\n      namespace: this.namespace,\n      onSubmit: this.onConfigFormSubmit.bind(this),\n      onReset: this.onConfigFormReset.bind(this),\n    });\n  }\n\n  buildOtpField() {\n    if (this.otpFieldConfig === undefined) {\n      throw Error('Invalid OTPField config');\n    }\n    this.otpField = new OTPField(this.otpFieldConfig);\n    const otpFieldWrapper = this.element.querySelector(\n      '.otp-field-wrapper'\n    ) as HTMLDivElement;\n    this.otpField.build(otpFieldWrapper);\n  }\n\n  destroyOtpField() {\n    this.otpField?.destroy();\n  }\n\n  focusOTPField() {\n    this.otpField?.focus();\n  }\n\n  setConfigOutputTextAreaValue(value: string) {\n    const configOutputTextArea = this.element.querySelector(\n      `#config-output-textarea`\n    ) as HTMLTextAreaElement;\n    configOutputTextArea.value = value;\n  }\n\n  setButtonsDisableState(disabled: boolean) {\n    const buttons = this.element.querySelectorAll<HTMLButtonElement>(\n      '.config-output-container button, .buttons-wrapper button'\n    );\n\n    buttons.forEach((btn) => {\n      // eslint-disable-next-line no-param-reassign\n      btn.disabled = disabled;\n    });\n  }\n\n  onConfigFormReset() {\n    this.setConfigOutputTextAreaValue('');\n    this.setButtonsDisableState(true);\n    this.destroyOtpField();\n    this.otpField = undefined;\n    this.otpFieldConfig = undefined;\n  }\n\n  onConfigFormSubmit(config: OTPFieldConfig) {\n    if (this.otpField !== undefined) {\n      this.onConfigFormReset();\n    }\n\n    this.otpFieldConfig = config;\n    this.setConfigOutputTextAreaValue(JSON.stringify(this.otpFieldConfig));\n    this.setButtonsDisableState(false);\n    this.buildOtpField();\n  }\n\n  copyOtpFieldIdToClipboard() {\n    navigator.clipboard.writeText(JSON.stringify(this.otpField?.id));\n  }\n\n  copyOtpFieldConfigToClipboard() {\n    navigator.clipboard.writeText(JSON.stringify(this.otpFieldConfig));\n  }\n\n  copyOtpFieldValueToClipboard() {\n    navigator.clipboard.writeText(JSON.stringify(this.otpField?.value));\n  }\n\n  clearOtpFieldValue() {\n    this.otpField?.clear();\n  }\n\n  toggleDisableOtpFieldClickHandler(e: any) {\n    const status = this.otpField?.isDisabled;\n    const btnStatusText = status ? 'Disable' : 'Enable';\n    this.otpField?.disable(!status);\n    e.target.innerText = `${btnStatusText} OTP Field`;\n  }\n\n  skeleton() {\n    const container = document.createElement('div');\n    container.id = this.id;\n    container.className = 'driver';\n\n    this.configForm?.build(container);\n    container.appendChild(this.configOutputContainer);\n    container.appendChild(this.otpFieldContainer);\n\n    return container;\n  }\n\n  get configOutputContainer() {\n    const container = document.createElement('div');\n    container.className = 'config-output-container';\n\n    container.appendChild(this.configOutputTextArea);\n    container.appendChild(this.copyOtpFieldConfigButton);\n\n    return container;\n  }\n\n  get copyOtpFieldConfigButton() {\n    return this.getButton({\n      namespace: 'copy-otp-field-config',\n      innerText: 'Copy OTP Field Config',\n      disabled: true,\n      onClick: this.copyOtpFieldConfigToClipboard,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get configOutputTextArea() {\n    const textarea = document.createElement('textarea');\n    textarea.id = 'config-output-textarea';\n    textarea.rows = 2;\n    textarea.readOnly = true;\n    return textarea;\n  }\n\n  get otpFieldContainer() {\n    const otpFieldContainer = document.createElement('div');\n    otpFieldContainer.className = 'otp-field-container';\n\n    otpFieldContainer.appendChild(this.otpFieldWrapper);\n    otpFieldContainer.appendChild(this.buttonsWrapper);\n\n    return otpFieldContainer;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get otpFieldWrapper() {\n    const otpFieldWrapper = document.createElement('div');\n    otpFieldWrapper.className = 'otp-field-wrapper';\n    return otpFieldWrapper;\n  }\n\n  get buttonsWrapper() {\n    const buttonWrapper = document.createElement('div');\n    buttonWrapper.className = 'buttons-wrapper';\n\n    buttonWrapper.appendChild(this.copyOtpFieldIdButton);\n    buttonWrapper.appendChild(this.copyOtpFieldValueButton);\n    buttonWrapper.appendChild(this.clearOtpFieldValueButton);\n    buttonWrapper.appendChild(this.focusOtpFieldButton);\n    buttonWrapper.appendChild(this.toggleDisableOtpFieldButton);\n\n    return buttonWrapper;\n  }\n\n  get copyOtpFieldIdButton() {\n    return this.getButton({\n      namespace: 'copy-otp-field-id',\n      innerText: 'Copy OTP Field ID',\n      disabled: true,\n      onClick: this.copyOtpFieldIdToClipboard,\n    });\n  }\n\n  get copyOtpFieldValueButton() {\n    return this.getButton({\n      namespace: 'copy-otp-field-value',\n      innerText: 'Copy OTP Field Value',\n      disabled: true,\n      onClick: this.copyOtpFieldValueToClipboard,\n    });\n  }\n\n  get clearOtpFieldValueButton() {\n    return this.getButton({\n      namespace: 'clear-otp-field-value',\n      innerText: 'Clear OTP Field Value',\n      disabled: true,\n      onClick: this.clearOtpFieldValue,\n    });\n  }\n\n  get focusOtpFieldButton() {\n    return this.getButton({\n      namespace: 'focus-otp-field',\n      innerText: 'Focus OTP Field',\n      disabled: true,\n      onClick: this.focusOTPField,\n    });\n  }\n\n  get toggleDisableOtpFieldButton() {\n    return this.getButton({\n      namespace: 'toggle-disable-otp-field',\n      innerText: 'Disable OTP Field',\n      disabled: true,\n      onClick: this.toggleDisableOtpFieldClickHandler,\n    });\n  }\n\n  build(parentElement: HTMLElement): void {\n    parentElement.appendChild(this.skeleton());\n  }\n\n  get id() {\n    return `${this.namespace}-driver`;\n  }\n\n  get element() {\n    const elem = document.getElementById(this.id);\n\n    if (elem === null) {\n      throw new Error(`Element with ID ${this.id} not found in the DOM.`);\n    }\n\n    return elem;\n  }\n}\n","import {\n  getOTPRegexForValueType,\n  OTPFieldConfig,\n  OTPValueType,\n} from '@satyam-seth/otp-field';\nimport ConfigFormConfig from './types';\n\nexport default class ConfigForm {\n  config: ConfigFormConfig;\n\n  constructor(config: ConfigFormConfig) {\n    this.config = config;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getLabelElement(config: { text: string; for: string }) {\n    const label = document.createElement('label');\n\n    label.innerText = `${config.text}: `;\n    label.setAttribute('for', config.for);\n\n    return label;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getInputElement(config: {\n    id: string;\n    name: string;\n    inputType: 'text' | 'number' | 'checkbox';\n    placeholder?: string;\n    value?: string;\n    extraAttributes?: { [key: string]: string };\n    required?: boolean;\n    disabled?: boolean;\n  }) {\n    const input = document.createElement('input');\n    input.id = config.id;\n    input.name = config.name;\n    input.type = config.inputType;\n    input.required = config.required ?? true;\n    input.disabled = config.disabled ?? false;\n\n    if (config.placeholder !== undefined) {\n      input.placeholder = config.placeholder;\n    }\n\n    if (config.value !== undefined) {\n      input.value = config.value;\n    }\n\n    if (config.extraAttributes !== undefined) {\n      Object.entries(config.extraAttributes).forEach(([k, v]) => {\n        if (k && v) {\n          input.setAttribute(k, v);\n        }\n      });\n    }\n\n    return input;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getOptionElement(config: { text: string; value: string }) {\n    const option = document.createElement('option');\n\n    option.innerText = config.text;\n    option.value = config.value;\n\n    return option;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getFormGroup(config: {\n    labelElement: HTMLLabelElement;\n    inputElement: HTMLInputElement | HTMLSelectElement;\n    inline?: boolean;\n  }) {\n    const groupElement = document.createElement('div');\n    groupElement.className = 'form-group';\n\n    if (config.inline === true) {\n      groupElement.classList.add('inline');\n    }\n\n    groupElement.appendChild(config.labelElement);\n    groupElement.appendChild(config.inputElement);\n\n    return groupElement;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getButtonElement(config: {\n    id: string;\n    text: string;\n    buttonType: 'submit' | 'reset';\n  }) {\n    const button = document.createElement('button');\n\n    button.id = config.id;\n    button.type = config.buttonType;\n    button.innerText = config.text;\n\n    return button;\n  }\n\n  toggleFieldDisableState(config: { id: string; disabled: boolean }) {\n    const field = this.element.querySelector(`#${config.id}`)! as\n      | HTMLInputElement\n      | HTMLSelectElement;\n    field.disabled = !config.disabled;\n  }\n\n  onPassCustomRegexChange(e: any) {\n    this.toggleFieldDisableState({\n      id: 'custom-regex',\n      disabled: e.target.checked,\n    });\n    this.toggleFieldDisableState({\n      id: 'value-type',\n      disabled: !e.target.checked,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  onSubmit(e: any) {\n    e.preventDefault();\n\n    const formData = new FormData(e.target);\n    const boxCount = Number(formData.get('box-count'));\n    const onPasteBlur = Boolean(formData.get('on-paste-blur'));\n    const passCustomRegex = Boolean(formData.get('pass-custom-regex'));\n    const valueType = Number(formData.get('value-type'));\n    const customRegex = String(formData.get('custom-regex'));\n\n    const config: OTPFieldConfig = {\n      namespace: this.config.namespace,\n      boxCount,\n      onPasteBlur,\n      valueType: passCustomRegex === false ? valueType : undefined,\n      customRegex:\n        // TODO: validate user enter valid regex\n        passCustomRegex === true ? new RegExp(customRegex) : undefined,\n    };\n\n    this.config.onSubmit(config);\n  }\n\n  skeleton() {\n    const form = document.createElement('form');\n    form.id = this.id;\n    form.className = 'config-form';\n\n    form.appendChild(this.boxCountFormGroup);\n    form.appendChild(this.onPasteBlurFormGroup);\n    form.appendChild(this.passCustomRegexFormGroup);\n    form.appendChild(this.customRegexFormGroup);\n    form.appendChild(this.valueTypeFormGroup);\n    form.appendChild(this.formButtonGroup);\n\n    // Add submit event listener\n    form.addEventListener('submit', this.onSubmit.bind(this));\n\n    // Add reset event listener\n    form.addEventListener('reset', this.config.onReset);\n\n    return form;\n  }\n\n  get boxCountLabel() {\n    return this.getLabelElement({ text: 'Box Count', for: 'box-count' });\n  }\n\n  get boxCountInput() {\n    return this.getInputElement({\n      id: 'box-count',\n      name: 'box-count',\n      inputType: 'number',\n      placeholder: 'enter box count',\n    });\n  }\n\n  get onPasteBlurLabel() {\n    return this.getLabelElement({\n      text: 'On Paste Blur Field',\n      for: 'on-paste-blur',\n    });\n  }\n\n  get onPasteBlurInput() {\n    return this.getInputElement({\n      id: 'on-paste-blur',\n      name: 'on-paste-blur',\n      inputType: 'checkbox',\n      required: false,\n    });\n  }\n\n  get passCustomRegexLabel() {\n    return this.getLabelElement({\n      text: 'Pass Custom Regex',\n      for: 'pass-custom-regex',\n    });\n  }\n\n  get passCustomRegexInput() {\n    const input = this.getInputElement({\n      id: 'pass-custom-regex',\n      name: 'pass-custom-regex',\n      inputType: 'checkbox',\n      required: false,\n    });\n\n    // add change event listener\n    input.addEventListener('change', this.onPassCustomRegexChange.bind(this));\n\n    return input;\n  }\n\n  get customRegexLabel() {\n    return this.getLabelElement({\n      text: 'Custom Regex',\n      for: 'custom-regex',\n    });\n  }\n\n  get customRegexInput() {\n    return this.getInputElement({\n      id: 'custom-regex',\n      name: 'custom-regex',\n      inputType: 'text',\n      placeholder: 'enter custom regex',\n      disabled: true,\n    });\n  }\n\n  get valueTypeLabel() {\n    return this.getLabelElement({\n      text: 'Value Type',\n      for: 'value-type',\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  get valueTypeOptions(): { [key: string]: string } {\n    return {\n      [`Numeric (${getOTPRegexForValueType(OTPValueType.NUMERIC)})`]:\n        OTPValueType.NUMERIC.toString(),\n      [`Alphabetic (${getOTPRegexForValueType(OTPValueType.ALPHABETIC)})`]:\n        OTPValueType.ALPHABETIC.toString(),\n      [`Alphabetic Lower Case (${getOTPRegexForValueType(OTPValueType.ALPHABETIC_LOWER)})`]:\n        OTPValueType.ALPHABETIC_LOWER.toString(),\n      [`Alphabetic Upper Case (${getOTPRegexForValueType(OTPValueType.ALPHABETIC_UPPER)})`]:\n        OTPValueType.ALPHABETIC_UPPER.toString(),\n      [`Alphanumeric (${getOTPRegexForValueType(OTPValueType.ALPHANUMERIC)}`]:\n        OTPValueType.ALPHANUMERIC.toString(),\n      [`Alphanumeric Lower Case (${getOTPRegexForValueType(OTPValueType.ALPHANUMERIC_LOWER)})`]:\n        OTPValueType.ALPHANUMERIC_LOWER.toString(),\n      [`Alphanumeric Upper Case (${getOTPRegexForValueType(OTPValueType.ALPHANUMERIC_UPPER)})`]:\n        OTPValueType.ALPHANUMERIC_UPPER.toString(),\n    };\n  }\n\n  get valueTypeSelect() {\n    const select = document.createElement('select');\n    select.id = 'value-type';\n    select.name = 'value-type';\n\n    Object.entries(this.valueTypeOptions).forEach(([k, v]) => {\n      if (k && v) {\n        select.appendChild(this.getOptionElement({ text: k, value: v }));\n      }\n    });\n\n    return select;\n  }\n\n  get boxCountFormGroup() {\n    return this.getFormGroup({\n      labelElement: this.boxCountLabel,\n      inputElement: this.boxCountInput,\n    });\n  }\n\n  get onPasteBlurFormGroup() {\n    return this.getFormGroup({\n      labelElement: this.onPasteBlurLabel,\n      inputElement: this.onPasteBlurInput,\n      inline: true,\n    });\n  }\n\n  get passCustomRegexFormGroup() {\n    return this.getFormGroup({\n      labelElement: this.passCustomRegexLabel,\n      inputElement: this.passCustomRegexInput,\n      inline: true,\n    });\n  }\n\n  get customRegexFormGroup() {\n    return this.getFormGroup({\n      labelElement: this.customRegexLabel,\n      inputElement: this.customRegexInput,\n    });\n  }\n\n  get valueTypeFormGroup() {\n    return this.getFormGroup({\n      labelElement: this.valueTypeLabel,\n      inputElement: this.valueTypeSelect,\n    });\n  }\n\n  get resetButton() {\n    return this.getButtonElement({\n      id: 'reset-btn',\n      text: 'Reset',\n      buttonType: 'reset',\n    });\n  }\n\n  get submitButton() {\n    return this.getButtonElement({\n      id: 'submit-btn',\n      text: 'Submit',\n      buttonType: 'submit',\n    });\n  }\n\n  get formButtonGroup() {\n    const groupElement = document.createElement('div');\n    groupElement.className = 'form-button-group';\n\n    groupElement.appendChild(this.resetButton);\n    groupElement.appendChild(this.submitButton);\n\n    return groupElement;\n  }\n\n  build(parentElement: HTMLElement): void {\n    parentElement.appendChild(this.skeleton());\n  }\n\n  get id() {\n    return `${this.config.namespace}-config-form`;\n  }\n\n  get element() {\n    const elem = document.getElementById(this.id);\n\n    if (elem === null) {\n      throw new Error(`Element with ID ${this.id} not found in the DOM.`);\n    }\n\n    return elem;\n  }\n}\n","import Driver from './driver';\r\n\r\nwindow.onload = () => {\r\n  // get parent element\r\n  const exampleSection = document.querySelector(\r\n    'section.example'\r\n  ) as HTMLElement;\r\n\r\n  const example = new Driver('example');\r\n  example.build(exampleSection);\r\n};\r\n"]}