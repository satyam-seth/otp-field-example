{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@satyam-seth/otp-field/dist/js/components/field.js","bundle.js","node_modules/@satyam-seth/otp-field/dist/js/components/types.js","node_modules/@satyam-seth/otp-field/dist/js/main.js","node_modules/@satyam-seth/otp-field/dist/js/utils/regex.js","node_modules/@satyam-seth/otp-field/dist/js/utils/types.js","src/ts/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","Object","defineProperty","value","OTPField","regex_1","types_1","constructor","config","this","fieldValue","boxCount","skeleton","field","document","createElement","id","className","appendChild","getBoxElement","index","box","getBoxId","type","maxLength","autocomplete","setAttribute","toString","addEventListener","onBoxInput","bind","onBoxKeyDown","onBoxFocus","onBoxPaste","namespace","element","elem","getElementById","focus","focusBoxIndex","getBoxValue","focusBox","clear","setBoxValue","destroy","remove","build","parentElement","getOtpRegex","_a","customRegex","getOTPRegexForValueType","valueType","OTPValueType","NUMERIC","applyRegex","replace","getBoxAtIndex","boxId","getBoxIndex","dataIndex","getAttribute","parseInt","updateValue","concatenatedValue","focusNextBox","currentBox","currentBoxIndex","focusPrevBox","preventDefault","pastedText","clipboardData","getData","pastedValue","target","Math","min","onPasteBlur","undefined","blur","selectionStart","selectionEnd","key","updatedValue","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","prototype","hasOwnProperty","ALPHABETIC","ALPHABETIC_LOWER","ALPHABETIC_UPPER","ALPHANUMERIC","ALPHANUMERIC_LOWER","ALPHANUMERIC_UPPER","otp_field_1","window","onload","otpField","exampleSection","querySelector"],"mappings":"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","file":"../bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OTPField = void 0;\nconst regex_1 = require(\"../utils/regex\");\nconst types_1 = require(\"../utils/types\");\nclass OTPField {\n    constructor(config) {\n        this.fieldValue = '';\n        if (config.boxCount <= 0) {\n            throw new Error('Invalid config box count must be grater than zero.');\n        }\n        this.config = config;\n    }\n    skeleton() {\n        const field = document.createElement('div');\n        field.id = this.id;\n        field.className = 'otp-field';\n        for (let i = 0; i < this.config.boxCount; i++) {\n            field.appendChild(this.getBoxElement(i));\n        }\n        return field;\n    }\n    getBoxElement(index) {\n        const box = document.createElement('input');\n        box.id = this.getBoxId(index);\n        box.className = 'otp-box';\n        box.type = 'text';\n        box.maxLength = 1;\n        box.autocomplete = 'off';\n        box.setAttribute('data-index', index.toString());\n        box.addEventListener('input', this.onBoxInput.bind(this));\n        box.addEventListener('keydown', this.onBoxKeyDown.bind(this));\n        box.addEventListener('focus', this.onBoxFocus.bind(this));\n        box.addEventListener('paste', this.onBoxPaste.bind(this));\n        return box;\n    }\n    get value() {\n        return this.fieldValue;\n    }\n    get id() {\n        return `otp-field-${this.config.namespace}`;\n    }\n    get element() {\n        const elem = document.getElementById(this.id);\n        if (elem === null) {\n            throw new Error(`Element with ID ${this.id} not found in the DOM.`);\n        }\n        return elem;\n    }\n    focus() {\n        let focusBoxIndex = this.config.boxCount - 1;\n        for (let i = 0; i < this.config.boxCount; i++) {\n            if (this.getBoxValue(i) === '') {\n                focusBoxIndex = i;\n                break;\n            }\n        }\n        this.focusBox(focusBoxIndex);\n    }\n    clear() {\n        for (let i = 0; i < this.config.boxCount; i++) {\n            this.setBoxValue(i, '');\n        }\n        this.fieldValue = '';\n        this.focusBox(0);\n    }\n    destroy() {\n        this.element.remove();\n    }\n    build(parentElement) {\n        parentElement.appendChild(this.skeleton());\n    }\n    getOtpRegex() {\n        var _a;\n        if (this.config.customRegex) {\n            return this.config.customRegex;\n        }\n        return (0, regex_1.getOTPRegexForValueType)((_a = this.config.valueType) !== null && _a !== void 0 ? _a : types_1.OTPValueType.NUMERIC);\n    }\n    applyRegex(value) {\n        return value.replace(this.getOtpRegex(), '');\n    }\n    getBoxId(index) {\n        return `${this.config.namespace}-box-${index}`;\n    }\n    getBoxAtIndex(index) {\n        const boxId = this.getBoxId(index);\n        const box = document.getElementById(boxId);\n        if (box === null) {\n            throw new Error(`Unable to get box at index ${index}`);\n        }\n        return box;\n    }\n    getBoxIndex(box) {\n        const dataIndex = box.getAttribute('data-index');\n        if (dataIndex) {\n            return parseInt(dataIndex, 10);\n        }\n        throw new Error('Unable to get `data-index` attribute for box');\n    }\n    updateValue() {\n        let concatenatedValue = '';\n        for (let i = 0; i < this.config.boxCount; i++) {\n            concatenatedValue += this.getBoxValue(i);\n        }\n        this.fieldValue = concatenatedValue;\n    }\n    focusBox(index) {\n        const box = this.getBoxAtIndex(index);\n        box.focus();\n    }\n    focusNextBox(currentBox) {\n        const currentBoxIndex = this.getBoxIndex(currentBox);\n        if (currentBoxIndex + 1 < this.config.boxCount) {\n            this.focusBox(currentBoxIndex + 1);\n        }\n    }\n    focusPrevBox(currentBox) {\n        const currentBoxIndex = this.getBoxIndex(currentBox);\n        if (currentBoxIndex - 1 >= 0) {\n            this.focusBox(currentBoxIndex - 1);\n        }\n    }\n    setBoxValue(index, value) {\n        const box = this.getBoxAtIndex(index);\n        box.value = value;\n    }\n    getBoxValue(index) {\n        const box = this.getBoxAtIndex(index);\n        return box.value;\n    }\n    onBoxPaste(e) {\n        e.preventDefault();\n        const pastedText = e.clipboardData.getData('text');\n        const pastedValue = this.applyRegex(pastedText);\n        const currentBoxIndex = this.getBoxIndex(e.target);\n        const maxLength = Math.min(this.config.boxCount - currentBoxIndex, pastedValue.length);\n        for (let i = 0; i < maxLength; i++) {\n            this.setBoxValue(currentBoxIndex + i, pastedValue[i]);\n        }\n        if (this.config.onPasteBlur === true ||\n            this.config.onPasteBlur === undefined) {\n            e.target.blur();\n        }\n        else {\n            this.focusBox(currentBoxIndex + maxLength - 1);\n        }\n        this.updateValue();\n    }\n    onBoxFocus(e) {\n        if (e.target.value.length === 1) {\n            e.target.selectionStart = 0;\n            e.target.selectionEnd = 1;\n        }\n    }\n    onBoxKeyDown(e) {\n        if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n            e.preventDefault();\n            this.focusPrevBox(e.target);\n        }\n        if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n            e.preventDefault();\n            this.focusNextBox(e.target);\n        }\n        if (e.key === 'Backspace' &&\n            (e.target.value === '' ||\n                e.target.selectionEnd === 0)) {\n            this.focusPrevBox(e.target);\n        }\n        if (e.key === 'Delete' &&\n            (e.target.value === '' ||\n                (e.target.selectionStart !== 0 &&\n                    e.target.selectionEnd === 1))) {\n            this.focusNextBox(e.target);\n        }\n        if (e.code === 'KeyZ' || e.code === 'KeyY') {\n            e.preventDefault();\n        }\n    }\n    onBoxInput(e) {\n        const updatedValue = this.applyRegex(e.target.value);\n        e.target.value = updatedValue;\n        if (e.target.value !== '') {\n            this.focusNextBox(e.target);\n        }\n        this.updateValue();\n    }\n}\nexports.OTPField = OTPField;\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./components/field\"), exports);\n__exportStar(require(\"./components/types\"), exports);\n__exportStar(require(\"./utils/regex\"), exports);\n__exportStar(require(\"./utils/types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOTPRegexForValueType = getOTPRegexForValueType;\nconst types_1 = require(\"./types\");\nfunction getOTPRegexForValueType(valueType) {\n    switch (valueType) {\n        case types_1.OTPValueType.NUMERIC:\n            return /[^0-9]/g;\n        case types_1.OTPValueType.ALPHABETIC:\n            return /[^A-Za-z]/g;\n        case types_1.OTPValueType.ALPHABETIC_LOWER:\n            return /[^a-z]/g;\n        case types_1.OTPValueType.ALPHABETIC_UPPER:\n            return /[^A-Z]/g;\n        case types_1.OTPValueType.ALPHANUMERIC:\n            return /[^A-Za-z0-9]/g;\n        case types_1.OTPValueType.ALPHANUMERIC_LOWER:\n            return /[^a-z0-9]/g;\n        case types_1.OTPValueType.ALPHANUMERIC_UPPER:\n            return /[^A-Za-z0-9]/g;\n        default:\n            throw new Error('Invalid OTP field value type');\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OTPValueType = void 0;\nvar OTPValueType;\n(function (OTPValueType) {\n    OTPValueType[OTPValueType[\"NUMERIC\"] = 0] = \"NUMERIC\";\n    OTPValueType[OTPValueType[\"ALPHABETIC\"] = 1] = \"ALPHABETIC\";\n    OTPValueType[OTPValueType[\"ALPHABETIC_LOWER\"] = 2] = \"ALPHABETIC_LOWER\";\n    OTPValueType[OTPValueType[\"ALPHABETIC_UPPER\"] = 3] = \"ALPHABETIC_UPPER\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC\"] = 4] = \"ALPHANUMERIC\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC_LOWER\"] = 5] = \"ALPHANUMERIC_LOWER\";\n    OTPValueType[OTPValueType[\"ALPHANUMERIC_UPPER\"] = 6] = \"ALPHANUMERIC_UPPER\";\n})(OTPValueType || (exports.OTPValueType = OTPValueType = {}));\n","import { OTPField } from '@satyam-seth/otp-field';\r\n\r\nwindow.onload = () => {\r\n  // create otp field instance\r\n  const otpField = new OTPField({\r\n    namespace: 'example',\r\n    boxCount: 6,\r\n  });\r\n\r\n  // get parent element\r\n  const exampleSection = document.querySelector(\r\n    'section.example'\r\n  ) as HTMLElement;\r\n\r\n  // build otp field\r\n  otpField.build(exampleSection);\r\n};\r\n"]}